name: Build (Reusable)

on:
    workflow_call:
        inputs:
            os:
                required: true
                type: string
            build_type:
                required: true
                type: string
            upload_artifacts:
                description: Upload binaries
                required: false
                type: boolean
                default: false

jobs:
    CMake:
        name: ${{ inputs.os }} ${{ inputs.build_type }} Build
        if: ${{ always() }}
        runs-on: ${{ inputs.os }}
        env:
            BUILD_TYPE: ${{ inputs.build_type }}
            PLUGIN_NAME: Rotor
        steps:
            -   name: Checkout Repo
                uses: actions/checkout@v4

            -   name: Clone JUCE
                uses: actions/checkout@v4
                with:
                    repository: juce-framework/JUCE
                    ref: 2f980209cc4091a4490bb1bafc5d530f16834e58
                    path: ${{ runner.workspace }}/rotor/JUCE

            -   name: Configure JUCE
                working-directory: ${{ runner.workspace }}/rotor/JUCE
                run: cmake -B bin . -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}

            -   name: Build JUCE
                working-directory: ${{ runner.workspace }}/rotor/JUCE
                run: cmake --build bin --parallel 8

            -   name: Precompile Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: chmod +x ./scripts/precompile.sh && ./scripts/precompile.sh

            -   name: Configure Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: cmake -B bin . -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}

            -   name: Build Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: cmake --build bin --config ${{ inputs.build_type }} --target ${{ env.PLUGIN_NAME }}_All --parallel 8

            - name: Set Environment Variables
              run: |
                  ARTIFACTS_PATH=bin/Rotor_artefacts/${{ inputs.build_type }}
                  echo "VST3_PATH=$ARTIFACTS_PATH/VST3/${{ env.PLUGIN_NAME }}.vst3" >> $GITHUB_ENV
                  echo "AU_PATH=$ARTIFACTS_PATH/AU/${{ env.PLUGIN_NAME }}.component" >> $GITHUB_ENV
                  echo "ARTIFACT_NAME=${{ env.PLUGIN_NAME }}-${{ runner.os }}" >> $GITHUB_ENV

            - name: Pluginval (MacOS)
              if: ${{ runner.os == 'macOS' }}
              run: |
                  curl -LO "https://github.com/Tracktion/pluginval/releases/download/v1.0.3/pluginval_macOS.zip"
                  7z x pluginval_macOS.zip
                  pluginval.app/Contents/MacOS/pluginval --strictness-level 10 --verbose --validate "${{ env.VST3_PATH }}"          

            - name: Move Binaries (MacOS)
              if: ${{ inputs.upload_artifacts && runner.os == 'macOS' }}
              run: |
                  mkdir -p dist && \
                  mv ${{ env.VST3_PATH }} dist && \
                  mv ${{ env.AU_PATH }} dist

            - name: Upload AU & VST3 (MacOS)
              if: ${{ inputs.upload_artifacts && runner.os == 'macOS' }}
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.ARTIFACT_NAME }}
                  path: dist/*

            - name: Pluginval (Windows)
              run: |
                  curl -LO "https://github.com/Tracktion/pluginval/releases/download/v1.0.3/pluginval_Windows.zip"
                  7z x pluginval_Windows.zip
                  ./pluginval.exe --strictness-level 10 --verbose --validate "${{ env.VST3_PATH }}/Contents/x86_64-win/Rotor.vst3"

            -   name: Upload VST3 (Windows)
                if: ${{ inputs.upload_artifacts && runner.os == 'Windows' }}
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ env.ARTIFACT_NAME }}
                    path: ${{ env.VST3_PATH }}/Contents/x86_64-win/Rotor.vst3
