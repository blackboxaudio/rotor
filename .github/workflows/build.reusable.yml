name: Build

on:
    workflow_call:
        inputs:
            os:
                description: Target operating system, e.g. MacOS, Windows
                required: true
                type: string
            build_type:
                description: Target build environment, e.g. Release, Debug
                required: true
                type: string
            upload_artifacts:
                description: Upload binaries
                required: false
                type: boolean
                default: false

jobs:
    CMake:
        name: ${{ inputs.os }} ${{ inputs.build_type }} Build
        if: ${{ always() }}
        runs-on: ${{ inputs.os == 'MacOS' && 'macos-13' || 'windows-2022' }}
        env:
            BUILD_TYPE: ${{ inputs.build_type }}
        steps:
            -   name: Checkout Repo
                uses: actions/checkout@v4

            -   name: Clone JUCE
                uses: actions/checkout@v2
                with:
                    repository: juce-framework/JUCE
                    ref: 2f980209cc4091a4490bb1bafc5d530f16834e58
                    path: ${{ runner.workspace }}/rotor/JUCE

            # JUCE
            -   name: Configure JUCE
                working-directory: ${{ runner.workspace }}/rotor/JUCE
                run: cmake -B bin . -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}

            -   name: Build JUCE
                working-directory: ${{ runner.workspace }}/rotor/JUCE
                run: cmake --build bin

            # Rotor
            -   name: Precompile Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: chmod +x ./scripts/precompile.sh && ./scripts/precompile.sh

            -   name: Configure Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: cmake -B bin . -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}

            -   name: Build Rotor
                working-directory: ${{ runner.workspace }}/rotor
                run: cmake --build bin --config ${{ inputs.build_type }} --target Rotor_All

            # Upload (Windows)
            -   name: Upload VST3 (Windows)
                if: ${{ inputs.upload && inputs.os == 'Windows' }}
                uses: actions/upload-artifact@v4
                with:
                    name: rotor-windows
                    path: bin/Rotor_artefacts/Release/VST3/Rotor.vst3/Contents/x86_64-win/Rotor.vst3

            # Upload (MacOS)
            - name: Move Binaries (MacOS)
              if: ${{ inputs.upload && inputs.os == 'MacOS' }}
              run: |
                  mkdir -p bin/dist \
                  mv bin/Rotor_artefacts/VST3/Rotor.vst3 bin/dist \
                  mv bin/Rotor_artefacts/AU/Rotor.component bin/dist

            - name: Upload AU & VST3 (MacOS)
              if: ${{ inputs.upload && inputs.os == 'MacOS' }}
              uses: actions/upload-artifact@v4
              with:
                  name: rotor-macos
                  path: bin/dist
